cargo : warning: unused variable: `component`
At line:1 char:1
+ cargo run --package logisim_ui --features gui 2>&1 | Tee-Object -File ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (warning: unused variable: `component`:String) [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError
 
   --> logisim_core\src\tools\add_tool.rs:130:21
    |
130 |                 for component in circuit.get_all_components() {
    |                     ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_component`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `location`
   --> logisim_core\src\tools\add_tool.rs:124:54
    |
124 |     fn is_valid_location(&self, canvas: &dyn Canvas, location: Location) -> bool {
    |                                                      ^^^^^^^^ help: if this is intentional, prefix it with an 
underscore: `_location`

warning: unused variable: `location`
   --> logisim_core\src\tools\add_tool.rs:139:29
    |
139 |     fn get_bounds_at(&self, location: Location) -> Option<Bounds> {
    |                             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_location`

warning: unused variable: `component`
   --> logisim_core\src\tools\add_tool.rs:164:13
    |
164 |         let component = self.create_component_at(event.location);
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_component`

warning: unused variable: `project`
   --> logisim_core\src\tools\add_tool.rs:167:25
    |
167 |         if let Some(mut project) = canvas.get_project() {
    |                         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_project`

warning: variable does not need to be mutable
   --> logisim_core\src\tools\add_tool.rs:167:21
    |
167 |         if let Some(mut project) = canvas.get_project() {
    |                     ----^^^^^^^
    |                     |
    |                     help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused variable: `canvas`
   --> logisim_core\src\tools\add_tool.rs:259:20
    |
259 |     fn draw(&self, canvas: &dyn Canvas, context: &ComponentDrawContext) {
    |                    ^^^^^^ help: if this is intentional, prefix it with an underscore: `_canvas`

warning: unused variable: `context`
   --> logisim_core\src\tools\add_tool.rs:259:41
    |
259 |     fn draw(&self, canvas: &dyn Canvas, context: &ComponentDrawContext) {
    |                                         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `component`
   --> logisim_core\src\tools\select_tool.rs:114:21
    |
114 |                 for component in circuit.get_all_components() {
    |                     ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_component`

warning: unused variable: `location`
   --> logisim_core\src\tools\select_tool.rs:110:54
    |
110 |     fn find_component_at(&self, canvas: &dyn Canvas, location: Location) -> Option<ComponentId> {
    |                                                      ^^^^^^^^ help: if this is intentional, prefix it with an 
underscore: `_location`

warning: unused variable: `selection_bounds`
   --> logisim_core\src\tools\select_tool.rs:134:21
    |
134 |                 let selection_bounds = Bounds::from_locations(start, end);
    |                     ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_selection_bounds`

warning: unused variable: `component`
   --> logisim_core\src\tools\select_tool.rs:136:21
    |
136 |                 for component in circuit.get_all_components() {
    |                     ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_component`

warning: variable does not need to be mutable
   --> logisim_core\src\tools\select_tool.rs:130:13
    |
130 |         let mut components = Vec::new();
    |             ----^^^^^^^^^^
    |             |
    |             help: remove this `mut`

warning: unused variable: `canvas`
   --> logisim_core\src\tools\select_tool.rs:179:30
    |
179 |     fn start_move(&mut self, canvas: &dyn Canvas, event: &MouseEvent) {
    |                              ^^^^^^ help: if this is intentional, prefix it with an underscore: `_canvas`

warning: unused variable: `canvas`
   --> logisim_core\src\tools\select_tool.rs:217:33
    |
217 |     fn complete_move(&mut self, canvas: &dyn Canvas) {
    |                                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_canvas`

warning: unused variable: `start`
   --> logisim_core\src\tools\select_tool.rs:275:30
    |
275 |                 if let Some((start, end)) = self.selection_rect {
    |                              ^^^^^ help: if this is intentional, prefix it with an underscore: `_start`

warning: unused variable: `end`
   --> logisim_core\src\tools\select_tool.rs:275:37
    |
275 |                 if let Some((start, end)) = self.selection_rect {
    |                                     ^^^ help: if this is intentional, prefix it with an underscore: `_end`

warning: unused variable: `canvas`
   --> logisim_core\src\tools\select_tool.rs:267:20
    |
267 |     fn draw(&self, canvas: &dyn Canvas, context: &ComponentDrawContext) {
    |                    ^^^^^^ help: if this is intentional, prefix it with an underscore: `_canvas`

warning: unused variable: `context`
   --> logisim_core\src\tools\select_tool.rs:267:41
    |
267 |     fn draw(&self, canvas: &dyn Canvas, context: &ComponentDrawContext) {
    |                                         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `canvas`
   --> logisim_core\src\tools\select_tool.rs:343:31
    |
343 |     fn key_pressed(&mut self, canvas: &dyn Canvas, event: &KeyEvent) {
    |                               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_canvas`

warning: unused variable: `event`
   --> logisim_core\src\tools\select_tool.rs:343:52
    |
343 |     fn key_pressed(&mut self, canvas: &dyn Canvas, event: &KeyEvent) {
    |                                                    ^^^^^ help: if this is intentional, prefix it with an underscore: 
`_event`

warning: unused variable: `canvas`
   --> logisim_core\src\tools\select_tool.rs:351:26
    |
351 |     fn select(&mut self, canvas: &dyn Canvas) {
    |                          ^^^^^^ help: if this is intentional, prefix it with an underscore: `_canvas`

warning: unused variable: `canvas`
   --> logisim_core\src\tools\select_tool.rs:355:28
    |
355 |     fn deselect(&mut self, canvas: &dyn Canvas) {
    |                            ^^^^^^ help: if this is intentional, prefix it with an underscore: `_canvas`

warning: unused variable: `component`
   --> logisim_core\src\tools\wiring_tool.rs:202:21
    |
202 |                 for component in circuit.get_all_components() {
    |                     ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_component`

warning: unused variable: `location`
   --> logisim_core\src\tools\wiring_tool.rs:196:59
    |
196 |     fn find_connection_points(&self, canvas: &dyn Canvas, location: Location) -> Vec<Location> {
    |                                                           ^^^^^^^^ help: if this is intentional, prefix it with an 
underscore: `_location`

warning: variable does not need to be mutable
   --> logisim_core\src\tools\wiring_tool.rs:197:13
    |
197 |         let mut points = Vec::new();
    |             ----^^^^^^
    |             |
    |             help: remove this `mut`

warning: unused variable: `canvas`
   --> logisim_core\src\tools\wiring_tool.rs:215:41
    |
215 |     fn is_valid_connection_point(&self, canvas: &dyn Canvas, location: Location) -> bool {
    |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_canvas`

warning: unused variable: `location`
   --> logisim_core\src\tools\wiring_tool.rs:215:62
    |
215 |     fn is_valid_connection_point(&self, canvas: &dyn Canvas, location: Location) -> bool {
    |                                                              ^^^^^^^^ help: if this is intentional, prefix it with an 
underscore: `_location`

warning: unused variable: `project`
   --> logisim_core\src\tools\wiring_tool.rs:258:29
    |
258 |                 if let Some(project) = canvas.get_project() {
    |                             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_project`

warning: unused variable: `canvas`
   --> logisim_core\src\tools\wiring_tool.rs:281:33
    |
281 |     fn check_wire_repair(&self, canvas: &dyn Canvas, location: Location) -> Option<WireRepairInfo> {
    |                                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_canvas`

warning: unused variable: `location`
   --> logisim_core\src\tools\wiring_tool.rs:281:54
    |
281 |     fn check_wire_repair(&self, canvas: &dyn Canvas, location: Location) -> Option<WireRepairInfo> {
    |                                                      ^^^^^^^^ help: if this is intentional, prefix it with an 
underscore: `_location`

warning: unused variable: `canvas`
   --> logisim_core\src\tools\wiring_tool.rs:317:20
    |
317 |     fn draw(&self, canvas: &dyn Canvas, context: &ComponentDrawContext) {
    |                    ^^^^^^ help: if this is intentional, prefix it with an underscore: `_canvas`

warning: unused variable: `context`
   --> logisim_core\src\tools\wiring_tool.rs:317:41
    |
317 |     fn draw(&self, canvas: &dyn Canvas, context: &ComponentDrawContext) {
    |                                         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `canvas`
   --> logisim_core\src\tools\wiring_tool.rs:387:33
    |
387 |     fn mouse_entered(&mut self, canvas: &dyn Canvas, event: &MouseEvent) {
    |                                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_canvas`

warning: unused variable: `canvas`
   --> logisim_core\src\tools\wiring_tool.rs:400:31
    |
400 |     fn key_pressed(&mut self, canvas: &dyn Canvas, event: &KeyEvent) {
    |                               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_canvas`

warning: unused variable: `event`
   --> logisim_core\src\tools\wiring_tool.rs:400:52
    |
400 |     fn key_pressed(&mut self, canvas: &dyn Canvas, event: &KeyEvent) {
    |                                                    ^^^^^ help: if this is intentional, prefix it with an underscore: 
`_event`

warning: type `WireSegment` is more private than the item `AddWireAction::new`
   --> logisim_core\src\tools\wiring_tool.rs:445:5
    |
445 |     pub fn new(wire_segment: WireSegment) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ associated function `AddWireAction::new` is reachable at visibility 
`pub`
    |
note: but type `WireSegment` is only usable at visibility `pub(self)`
   --> logisim_core\src\tools\wiring_tool.rs:52:1
    |
 52 | struct WireSegment {
    | ^^^^^^^^^^^^^^^^^^
    = note: `#[warn(private_interfaces)]` on by default

warning: associated items `LINE_PATTERN` and `get_line_end_index` are never used
   --> logisim_core\src\hdl\parsers\vhdl.rs:44:11
    |
 42 | impl VhdlParser {
    | --------------- associated items in this implementation
 43 |     // Pattern constants equivalent to Java
 44 |     const LINE_PATTERN: &'static str = r":\s*(\w+)\s+std_logic";
    |           ^^^^^^^^^^^^
...
237 |     fn get_line_end_index(&self, input: &str, from: usize) -> usize {
    |        ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: field `id` is never read
  --> logisim_core\src\std\base\base_library.rs:22:5
   |
21 | pub struct BaseLibrary {
   |            ----------- field in this struct
22 |     id: String,
   |     ^^

warning: field `id` is never read
  --> logisim_core\src\std\gates\gates_library.rs:23:5
   |
22 | pub struct GatesLibrary {
   |            ------------ field in this struct
23 |     id: String,
   |     ^^

warning: method `get_bounds_at` is never used
   --> logisim_core\src\tools\add_tool.rs:139:8
    |
 76 | impl AddTool {
    | ------------ method in this implementation
...
139 |     fn get_bounds_at(&self, location: Location) -> Option<Bounds> {
    |        ^^^^^^^^^^^^^

warning: fields `component`, `location`, and `circuit_id` are never read
   --> logisim_core\src\tools\add_tool.rs:343:5
    |
342 | pub struct AddComponentAction {
    |            ------------------ fields in this struct
343 |     component: Box<dyn Component>,
    |     ^^^^^^^^^
344 |     location: Location,
    |     ^^^^^^^^
345 |     circuit_id: Option<String>, // Circuit identifier
    |     ^^^^^^^^^^

warning: field `draw_connections` is never read
  --> logisim_core\src\tools\select_tool.rs:72:5
   |
60 | pub struct SelectTool {
   |            ---------- field in this struct
...
72 |     draw_connections: bool,
   |     ^^^^^^^^^^^^^^^^

warning: variant `Repairing` is never constructed
  --> logisim_core\src\tools\wiring_tool.rs:47:5
   |
41 | enum WiringState {
   |      ----------- variant in this enum
...
47 |     Repairing,
   |     ^^^^^^^^^
   |
   = note: `WiringState` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during 
dead code analysis

warning: field `width` is never read
  --> logisim_core\src\tools\wiring_tool.rs:60:5
   |
52 | struct WireSegment {
   |        ----------- field in this struct
...
60 |     width: i32,
   |     ^^^^^
   |
   = note: `WireSegment` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during 
dead code analysis

warning: methods `length`, `is_horizontal`, and `is_vertical` are never used
   --> logisim_core\src\tools\wiring_tool.rs:131:8
    |
 63 | impl WireSegment {
    | ---------------- methods in this implementation
...
131 |     fn length(&self) -> i32 {
    |        ^^^^^^
...
143 |     fn is_horizontal(&self) -> bool {
    |        ^^^^^^^^^^^^^
...
148 |     fn is_vertical(&self) -> bool {
    |        ^^^^^^^^^^^

warning: associated items `MIN_REPAIR_LENGTH`, `find_connection_points`, and `check_wire_repair` are never used
   --> logisim_core\src\tools\wiring_tool.rs:182:11
    |
177 | impl WiringTool {
    | --------------- associated items in this implementation
...
182 |     const MIN_REPAIR_LENGTH: i32 = 10;
    |           ^^^^^^^^^^^^^^^^^
...
196 |     fn find_connection_points(&self, canvas: &dyn Canvas, location: Location) -> Vec<Location> {
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
281 |     fn check_wire_repair(&self, canvas: &dyn Canvas, location: Location) -> Option<WireRepairInfo> {
    |        ^^^^^^^^^^^^^^^^^

warning: struct `WireRepairInfo` is never constructed
   --> logisim_core\src\tools\wiring_tool.rs:427:8
    |
427 | struct WireRepairInfo {
    |        ^^^^^^^^^^^^^^

warning: fields `wire_segment` and `circuit_id` are never read
   --> logisim_core\src\tools\wiring_tool.rs:440:5
    |
439 | pub struct AddWireAction {
    |            ------------- fields in this struct
440 |     wire_segment: WireSegment,
    |     ^^^^^^^^^^^^
441 |     circuit_id: Option<String>,
    |     ^^^^^^^^^^

warning: `logisim_core` (lib) generated 49 warnings (run `cargo fix --lib -p logisim_core` to apply 3 suggestions)
warning: unused import: `Simulation`
 --> logisim_ui\src\gui\app.rs:6:50
  |
6 | use logisim_core::{circ_format::CircIntegration, Simulation};
  |                                                  ^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `prefs::AppPreferences`
 --> logisim_ui\src\gui\startup.rs:7:43
  |
7 | use logisim_core::{build_info::BuildInfo, prefs::AppPreferences};
  |                                           ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `logisim_core::ComponentId`
 --> logisim_ui\src\gui\toolbar.rs:2:5
  |
2 | use logisim_core::ComponentId;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `HALO_COLOR` and `snap_to_grid`
 --> logisim_ui\src\gui\canvas.rs:3:54
  |
3 | use super::common::{default_stroke, selected_stroke, snap_to_grid, GRID_SIZE, HALO_COLOR};
  |                                                      ^^^^^^^^^^^^             ^^^^^^^^^^

warning: unused import: `Value`
 --> logisim_ui\src\gui\chronogram\model.rs:8:43
  |
8 |     signal::{BusWidth, Signal, Timestamp, Value},
  |                                           ^^^^^

warning: unused import: `Vec2`
 --> logisim_ui\src\gui\chronogram\timeline.rs:7:62
  |
7 | use egui::{Color32, Pos2, Rect, Response, Sense, Stroke, Ui, Vec2};
  |                                                              ^^^^

warning: unused import: `Vec2`
 --> logisim_ui\src\gui\chronogram\waveform.rs:7:62
  |
7 | use egui::{Color32, Pos2, Rect, Response, Sense, Stroke, Ui, Vec2};
  |                                                              ^^^^

warning: unused import: `self`
 --> logisim_ui\src\gui\project_explorer.rs:3:20
  |
3 | use eframe::egui::{self, CollapsingHeader, Ui};
  |                    ^^^^

warning: unused import: `self`
 --> logisim_ui\src\gui\toolbox.rs:3:20
  |
3 | use eframe::egui::{self, CollapsingHeader, Ui};
  |                    ^^^^

warning: unused import: `Stroke`
  --> logisim_ui\src\hex\caret.rs:19:62
   |
19 | use egui::{Color32, Key, Modifiers, Painter, Rect, Rounding, Stroke};
   |                                                              ^^^^^^

warning: unused import: `HexModelListener`
  --> logisim_ui\src\hex\hex_editor.rs:15:34
   |
15 | use super::hex_model::{HexModel, HexModelListener};
   |                                  ^^^^^^^^^^^^^^^^

warning: unused imports: `Context`, `Key`, `Modifiers`, `Stroke`, and `TextStyle`
  --> logisim_ui\src\hex\hex_editor.rs:21:14
   |
21 |     Color32, Context, FontId, Key, Modifiers, Painter, Pos2, Rect, Response, Rounding, ScrollArea,
   |              ^^^^^^^          ^^^  ^^^^^^^^^
22 |     Sense, Stroke, TextStyle, Ui, Vec2, Widget,
   |            ^^^^^^  ^^^^^^^^^

warning: unused import: `Stroke`
  --> logisim_ui\src\hex\highlighter.rs:18:46
   |
18 | use egui::{Color32, Painter, Rect, Rounding, Stroke};
   |                                              ^^^^^^

warning: unused variable: `pos`
   --> logisim_ui\src\gui\canvas.rs:140:38
    |
140 |     fn select_at_position(&mut self, pos: Pos2) {
    |                                      ^^^ help: if this is intentional, prefix it with an underscore: `_pos`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `available_rect`
   --> logisim_ui\src\gui\chronogram\panel.rs:102:13
    |
102 |         let available_rect = ui.available_rect_before_wrap();
    |             ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_available_rect`

warning: unused variable: `model`
   --> logisim_ui\src\hex\measures.rs:163:35
    |
163 |     pub fn to_x(&self, addr: u64, model: Option<&dyn HexModel>) -> f32 {
    |                                   ^^^^^ help: if this is intentional, prefix it with an underscore: `_model`

warning: unused variable: `old_base_x`
   --> logisim_ui\src\hex\measures.rs:178:13
    |
178 |         let old_base_x = self.base_x;
    |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_old_base_x`

warning: variable does not need to be mutable
   --> logisim_ui\src\hex\measures.rs:223:21
    |
223 |                 let mut addr_end = model.get_last_offset();
    |                     ----^^^^^^^^
    |                     |
    |                     help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: field `dragging` is never read
  --> logisim_ui\src\gui\canvas.rs:26:5
   |
 9 | pub struct Canvas {
   |            ------ field in this struct
...
26 |     dragging: bool,
   |     ^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `scroll_position` is never read
  --> logisim_ui\src\gui\chronogram\panel.rs:35:5
   |
21 | pub struct ChronogramPanel {
   |            --------------- field in this struct
...
35 |     scroll_position: Vec2,
   |     ^^^^^^^^^^^^^^^
   |
   = note: `ChronogramPanel` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code 
analysis

warning: field `expanded_circuits` is never read
  --> logisim_ui\src\gui\project_explorer.rs:12:5
   |
 7 | pub struct ProjectExplorer {
   |            --------------- field in this struct
...
12 |     expanded_circuits: std::collections::HashSet<String>,
   |     ^^^^^^^^^^^^^^^^^

warning: methods `show_components`, `toggle_circuit_expansion`, and `is_circuit_expanded` are never used
   --> logisim_ui\src\gui\project_explorer.rs:75:8
    |
 15 | impl ProjectExplorer {
    | -------------------- methods in this implementation
...
 75 |     fn show_components(&self, ui: &mut Ui, _simulation: &Simulation) {
    |        ^^^^^^^^^^^^^^^
...
 94 |     fn toggle_circuit_expansion(&mut self, circuit_name: &str) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
103 |     fn is_circuit_expanded(&self, circuit_name: &str) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^

warning: field `last_mouse_pos` is never read
  --> logisim_ui\src\hex\hex_editor.rs:50:5
   |
29 | pub struct HexEditor {
   |            --------- field in this struct
...
50 |     last_mouse_pos: Option<Pos2>,
   |     ^^^^^^^^^^^^^^

warning: methods `get_model_ref` and `with_model_ref` are never used
   --> logisim_ui\src\hex\hex_editor.rs:219:8
    |
 54 | impl HexEditor {
    | -------------- methods in this implementation
...
219 |     fn get_model_ref(&self) -> Option<Arc<Mutex<dyn HexModel>>> {
    |        ^^^^^^^^^^^^^
...
224 |     fn with_model_ref<T, F>(&self, f: F) -> Option<T>
    |        ^^^^^^^^^^^^^^

warning: field `next_listener_id` is never read
  --> logisim_ui\src\hex\hex_model.rs:91:5
   |
85 | pub struct MemoryHexModel {
   |            -------------- field in this struct
...
91 |     next_listener_id: usize,
   |     ^^^^^^^^^^^^^^^^

warning: `logisim_ui` (lib) generated 25 warnings (run `cargo fix --lib -p logisim_ui` to apply 14 suggestions)
warning: unused import: `logisim_core::prefs::AppPreferences`
  --> logisim_ui\src\main.rs:15:5
   |
15 | use logisim_core::prefs::AppPreferences;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `run_app_with_file` and `run_app`
  --> logisim_ui\src\main.rs:18:28
   |
18 | use logisim_ui::gui::app::{run_app, run_app_with_file};
   |                            ^^^^^^^  ^^^^^^^^^^^^^^^^^

warning: `logisim_ui` (bin "logisim-rust") generated 2 warnings (run `cargo fix --bin "logisim-rust"` to apply 2 
suggestions)
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.49s
     Running `target\debug\logisim-rust.exe`
[2025-09-25T06:13:59Z ERROR wgpu_hal::vulkan::instance] GENERAL [Loader Message (0x0)]
    	loader_get_json: Failed to open JSON file C:\Program Files\Rockstar Games\Social Club\SocialClubVulkanLayer.json
[2025-09-25T06:13:59Z ERROR wgpu_hal::vulkan::instance] 	objects: (type: INSTANCE, hndl: 0x1f3dc6ad990, name: ?)
