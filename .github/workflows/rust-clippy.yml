name: "Rust Clippy"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  analyze_sources:
    name: "Check for Rust source changes"
    runs-on: ubuntu-latest
    outputs:
      run_clippy: ${{ steps.filter.outputs.rust }}
      changed_files: ${{ steps.filter.outputs.rust_files }}
    
    steps:
    - name: "Checkout sources"
      uses: actions/checkout@v5
    
    - name: "Look for changes in Rust code"
      uses: dorny/paths-filter@v3
      id: filter
      with:
        list-files: 'escape'
        filters: |
          rust:
            - '**/*.rs'
            - '**/Cargo.toml'
    
    - name: "Will Clippy step run?"
      run: |
        found="NO"
        [[ ${{ steps.filter.outputs.rust }} == 'true' ]] && found="YES"
        echo "run_clippy=${found}" >> $GITHUB_OUTPUT
        echo "Clippy step will run: ${found}"

  clippy:
    name: "Clippy Linter"
    runs-on: ubuntu-latest
    needs: analyze_sources
    if: needs.analyze_sources.outputs.run_clippy == 'true'
    
    steps:
    - name: "Checkout sources"
      uses: actions/checkout@v5
    
    - name: "Install Rust toolchain"
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy
    
    - name: "Cache Rust dependencies"
      uses: Swatinem/rust-cache@v2
    
    - name: "Run Clippy (deny warnings)"
      run: cargo clippy --workspace --all-targets -- -D warnings
    
    - name: "Run Clippy (pedantic for review)"
      run: cargo clippy --workspace --all-targets -- -W clippy::pedantic
      continue-on-error: true