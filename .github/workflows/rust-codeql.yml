name: "CodeQL Security Analysis"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '23 2 * * 1'  # Weekly on Mondays at 2:23 AM UTC

env:
  CARGO_TERM_COLOR: always

jobs:
  analyze:
    name: "CodeQL Analysis"
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        # Only analyzing Rust for this project
        language: [ 'rust' ]

    steps:
    - name: "Checkout repository"
      uses: actions/checkout@v5

    - name: "Initialize CodeQL"
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        # Custom queries can be added here if needed
        # queries: security-extended,security-and-quality

    - name: "Install Rust toolchain"
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: stable

    - name: "Cache Rust dependencies"
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: "Logisim-Rust -> target"

    # Build the project for CodeQL analysis
    # Note: Excluding GUI features to avoid winit platform compatibility issues in headless CI
    - name: "Build project"
      run: |
        echo "Building project for CodeQL analysis (headless mode)..."
        cargo build --verbose --workspace
        echo "âœ… Build completed for CodeQL analysis"
      working-directory: Logisim-Rust

    - name: "Perform CodeQL Analysis"
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"